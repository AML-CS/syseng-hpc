#!/usr/bin/env bash
#
# Author vdguevara@uninorte.edu.co
# Updated by sjdonado@uninorte.edu.co
# More info: https://aml-cs.github.io
#

set -e

DIR=$(realpath "${BASH_SOURCE%/*}")
if [[ ! -d "$DIR" ]]; then DIR="${PWD}"; fi
. "${DIR}/print_msg"

options=$(getopt -o p:o:h:i:f:t:d:  --long help --long prefix: --long output: \
                                     --long hours: --long from: --long to:\
                                     --long interval: --long domains: -- "$@")
eval set -- "$options"

function usage() {
    echo "Usage: $0 [options] [START] END"
    echo "Generates an ensemble with members from START to END"
    printf "\n  %-30s %s\n" "-p --prefix=PREFIX" "The prefix of the member filenames (ex: m would generate m1, m2, m3,...). Default is 'm'"
    printf "  %-30s %s\n" "-o --output=DIRECTORY" "The directory where the members are going to be stored."
    printf "  %-35s %s\n" "-f --from=DATE" "Start date"
    printf "  %-35s %s\n" "-t --to=DATE" "End date"
    printf "  %-35s %s\n" "-h --hours=HOURS" "Simulation time in hours"
    printf "  %-35s %s\n" "-i --interval=HOURS" "Simulation interval_seconds in hours"
    printf "  %-35s %s\n" "-d --domains=NUMBER" "Number of domains"
    printf "  %-30s %s\n\n" "--help" "Show this message and exit"
    exit 0
}

PREFIX="m"
DIRECTORY="$(pwd)"
DOMAINS=1
WRFDA_PROCESSORS=16

while true; do
 case "$1" in
    -p|--prefix)
        shift
        PREFIX=$1
        ;;
    -o|--output)
        shift
        DIRECTORY=$(realpath $1)
        mkdir -p $1
        ;;
    -h|--hours)
        shift
        HOURS=$1
        ;;
    -i|--interval)
        shift
        INTERVAL=$1
        ;;
    -d|--domains)
        shift
        DOMAINS=$1
        ;;
    -f|--from)
        shift
        FROM=$1
        ;;
    -t|--to)
        shift
        TO=$1
        ;;
    -h|--help)
        usage
        ;;
    --)
        shift
        break
        ;;
 esac
 shift
done

START=1
N=2

if [[ -n $1 ]];
then
    N=$1
fi

if [[ -n $2 ]]; then
    START=$1
    N=$2
fi

cd $WRFDA_DIR

NAMELIST_FILE=$NAMELISTS_DIR/namelist-wrfda.input

$BIN_DIR/link-wrfda-prep-data.py

print_msg "Running simulation..."

# timestamp=$(date +%Y-%m-%d_%H:%M:%S)
# DIRECTORY="${DIRECTORY}/baq-1km-ensemble"
# mkdir -p $DIRECTORY
# chmod 777 $DIRECTORY

# run-wrf --only-real -i $INTERVAL -f "$FROM" -t "$TO"  --output ${DIRECTORY}/original
# run-wrf --only-wrf -i $INTERVAL -f "$FROM" -t "$TO"  --output ${DIRECTORY}/original

for (( i=${START}; i<=$N; i++ )); do
    print_msg "\nMember ${i}" -cmagenta
    print_msg "Generating first initial condition..."
    run-wrf --only-real
    sed -i "s/^[[:space:]]*seed_array2.*/seed_array2=${i}/" $NAMELIST_FILE
    print_msg "\nPerturbing initial condition..."
    ulimit -Hc
    run-wrfda -f "$FROM" -t "$TO" -h $HOURS
    if [[ -f wrfvar_output ]]; then
        print_msg "\nUpdating boundary conditions..."
        ./da_update_bc.exe >& update.out
        cp wrfbdy_d01 $WRF_DIR/run
        print_msg "Running simulation with new initial conditions..."
        cp wrfvar_output ${WRF_DIR}/run/wrfinput_d01
        run-wrf --only-wrf -d $DOMAINS --output ${DIRECTORY}/${PREFIX}${i}
        print_msg "\nEnsemble member ${i} created succesfully" -cgreen
    fi
done

print_msg "\nFinished!" -cgreen
