#!/usr/bin/env bash
#
# Author vdguevara@uninorte.edu.co
# Updated by sjdonado@uninorte.edu.co
# More info: https://aml-cs.github.io
#

DIR="${BASH_SOURCE%/*}"
if [[ ! -d "$DIR" ]]; then DIR="$PWD"; fi
. "$DIR/print_msg"

options=$(getopt -o "p:h:f:t:" --long help --long processors: --long hours:\
                            --long from: --long to: -- "$@")

function usage() {
    echo "Usage: $0 [options]"
    echo "Runs a WRFDA 4DVAR"
    printf "\n  %-35s %s\n" "-p  --processors=PROCESSORS" "How many processors to run. Default value is 6"
    printf "  %-35s %s\n" "-f --from=DATE" "Start date"
    printf "  %-35s %s\n" "-t --to=DATE" "End date"
    printf "  %-35s %s\n" "-h --hours=HOURS" "Simulation time in hours"
    printf "  %-35s %s\n\n" "--help" "Show this message and exit"
    exit 0
}

eval set -- "$options"

PROCESSORS=6
while true; do
    case "$1" in
    -p|--processors)
        shift
        PROCESSORS=$1
        ;;
    -h|--hours)
        shift
        SECONDS=$(($1*3600))
        ;;
    --help)
        usage
        ;;
    -t|--to)
        shift
        TO=$1
        ;;
    -f|--from)
        shift
        FROM=$1
        ;;
    --)
        shift
        break
        ;;
    esac
    shift
done

cd $WRFDA_DIR

NAMELIST_FILE=$NAMELISTS_DIR/namelist-wrfda.input
ln -sf $NAMELIST_FILE namelist.input

if [[ -n $SECONDS ]]; then
    sed -i "s/interval_seconds.*/interval_seconds = ${SECONDS},/" $NAMELIST_FILE
    print_msg "4DVAR inverval seconds: ${SECONDS}" -cmagenta
fi

if [[ -n $FROM ]]; then
    YEAR=$(date --date="${FROM}" +%Y)
    MONTH=$(date --date="${FROM}" +%m)
    DAY=$(date --date="${FROM}" +%d)
    HOUR=$(date --date="${FROM}" +%H)

    sed -i "s/start_year.*/start_year = $YEAR,/" $NAMELIST_FILE
    sed -i "s/start_month.*/start_month = $MONTH,/" $NAMELIST_FILE
    sed -i "s/start_day.*/start_day = $DAY,/" $NAMELIST_FILE
    sed -i "s/start_hour.*/start_hour = $HOUR,/" $NAMELIST_FILE

    FROM=$(date --date="${FROM}" +%Y-%m-%d_%H:%M:%S)
    sed -i "s/analysis_date.*/analysis_date= '$FROM',/" $NAMELIST_FILE
    sed -i "s/time_window_min.*/time_window_min= '$FROM',/" $NAMELIST_FILE

    print_msg "Time window min: ${FROM}" -cmagenta
fi

if [[ -n $TO ]]; then
    YEAR=$(date --date="${TO}" +%Y)
    MONTH=$(date --date="${TO}" +%m)
    DAY=$(date --date="${TO}" +%d)
    HOUR=$(date --date="${TO}" +%H)

    sed -i "s/end_year.*/end_year = $YEAR,/" $NAMELIST_FILE
    sed -i "s/end_month.*/end_month = $MONTH,/" $NAMELIST_FILE
    sed -i "s/end_day.*/end_day = $DAY,/" $NAMELIST_FILE
    sed -i "s/end_hour.*/end_hour = $HOUR,/" $NAMELIST_FILE

    TO=$(date --date="${TO}" +%Y-%m-%d_%H:%M:%S)
    sed -i "s/time_window_max.*/time_window_max= '$TO',/" $NAMELIST_FILE

    print_msg "Time window end: ${TO}" -cmagenta
fi

rm -f wrfinput_d*
rm -f wrfbdy_d*
rm -f wrfvar_output
rm -f rsl.*

cp $WRF_DIR/run/wrfbdy_d01 .
ln -sf $WRF_DIR/run/wrfinput_d01 .
ln -sf wrfinput_d01 fg

# ulimit -s unlimited
print_msg "Running wrfda with ${PROCESSORS} processors" -cmagenta

time mpirun -n 32 ./da_wrfvar.exe > stdout.log 2>&1
# time srun -n 1 --mpi=pmi2 ./da_wrfvar.exe

if [ ! -f wrfvar_output ]; then
    print_msg "An error ocurred while running WRFDA" -cred
    tail rsl.error.*
    exit 1
fi
